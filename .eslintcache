[{"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\index.js":"1","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\App.js":"2","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\CustomersList.js":"3","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\CustomerDetails.js":"4","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\TrainerDetails.js":"5","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\CustomerSessions.js":"6","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\contexts\\TrainerContext.js":"7","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\Login.js":"8","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\lib\\components\\Navbar.js":"9","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\lib\\service.js":"10","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\signup.js":"11","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\utils\\firebase\\firebase.config.js":"12"},{"size":325,"mtime":1612035039574,"results":"13","hashOfConfig":"14"},{"size":2589,"mtime":1612037806371,"results":"15","hashOfConfig":"14"},{"size":2704,"mtime":1612035039578,"results":"16","hashOfConfig":"14"},{"size":6253,"mtime":1612035039576,"results":"17","hashOfConfig":"14"},{"size":457,"mtime":1612035039579,"results":"18","hashOfConfig":"14"},{"size":434,"mtime":1612035039577,"results":"19","hashOfConfig":"14"},{"size":4708,"mtime":1612035039572,"results":"20","hashOfConfig":"14"},{"size":3363,"mtime":1612119851420,"results":"21","hashOfConfig":"14"},{"size":780,"mtime":1612035039575,"results":"22","hashOfConfig":"14"},{"size":1258,"mtime":1612035039576,"results":"23","hashOfConfig":"14"},{"size":1613,"mtime":1612041155018,"results":"24","hashOfConfig":"14"},{"size":703,"mtime":1612044111853,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yk8vt8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\index.js",[],["55","56"],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\App.js",["57","58","59","60"],"import React from 'react';\r\nimport { Switch, Route, Redirect, BrowserRouter as Router } from 'react-router-dom';\r\n// import './App.css';\r\nimport Navbar from './lib/components/Navbar';\r\nimport CustomerDetails from './pages/CustomerDetails';\r\nimport CustomersList from './pages/CustomersList';\r\nimport TrainerDetails from './pages/TrainerDetails';\r\nimport CustomerSessions from './pages/CustomerSessions';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/signup';\r\nimport TrainerProvider from './contexts/TrainerContext';\r\nimport TrainerContextProvider from './contexts/TrainerContext';\r\nimport { computeHeadingLevel } from '@testing-library/react';\r\n\r\n// IMPORTANT: https://www.pluralsight.com/guides/how-to-pass-data-between-react-components\r\n\r\n// [AMN] Until we have the signin process ready I'm passing by props the trainer Id I want to use for test purpose.\r\nfunction App() {\r\n  const isLoggedin = true; // [AMN] Provisionally till we have the signup/signin ready\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <TrainerContextProvider >\r\n          {console.log(\"I'm back from TrainerProvider...\")}\r\n          <Switch>\r\n            <Route exact path=\"/customerslist\" component={CustomersList}/> \r\n            <Route exact path=\"/customerdetails/:id\" component={CustomerDetails}/> \r\n            <Route exact path=\"/customersessions/:id\" component={CustomerSessions}/>\r\n            <Route exact path=\"/trainerdetails\" component={TrainerDetails}/> \r\n            <Route exact path=\"/signin\" component={Login}/>\r\n            <Route exact path=\"/signup\" component={Signup}/>\r\n          </Switch>\r\n        </TrainerContextProvider>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// function App() {\r\n//   const isLoggedin = true; // [AMN] Provisionally till we have the signup/signin ready\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Navbar />\r\n//       <Switch>\r\n//         <Route exact path=\"/customerslist\" \r\n//           render={() => isLoggedin ? <CustomersList trainerId={'5ffb2d0deed9fa20eab8044f'}/> \r\n//                                    : <Redirect to=\"/signin\" />} /> \r\n//         <Route exact path=\"/customerdetails\" \r\n//           render={(customer) => isLoggedin ? <CustomerDetails {...customer} /> \r\n//                                    : <Redirect to=\"/signin\" />} /> \r\n//         <Route exact path=\"/signin\" \r\n//           render={() => !isLoggedin ? <Login />\r\n//                                     : <Redirect to=\"/customerslist\" />} />\r\n//       </Switch>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\CustomersList.js",["61","62"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {TrainerContext} from \"../contexts/TrainerContext\";\r\n\r\nconsole.log(\"I'm within CustomersList.js\");\r\nfunction CustomersList () {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {customersList, setCustomersList, \r\n           error, setError,\r\n           fetchAllCustomers} = useContext(TrainerContext);\r\n    console.log(\"Within function CustomerList.js with context: \", customersList);\r\n    console.log(\"Setcustomerslist: \", setCustomersList);\r\n    console.log(\"Fucntion fetchallcustomers: \", fetchAllCustomers);\r\n    // const handleSessions = (customerId) => {\r\n    //     console.log(\"Clicking to see sessions of customerId: \", customerId);\r\n    // };\r\n\r\n    // const handleCustomerData = (customerId) => {\r\n    //     console.log(\"On link to customer details...\");\r\n    //     <Link to='/customerdetails' />\r\n    //     // console.log(\"Cliking to see customer personal data of customerId: \", customerId);\r\n    // };\r\n\r\n    // On the first render we look for the customers of the trainer. If we wanted to look for the customers\r\n    // each time the customersList changed we should put at the end of the useEffect [customersList] instead\r\n    // of []. Without [] useEffect is executing fetchAllCustomers in each render, with [] only when we\r\n    // mount the component and with [customersList] each time the customersList changes.\r\n    useEffect(() => {\r\n        fetchAllCustomers(\"5ffb2d0deed9fa20eab8044f\"); \r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    // fetchAllCustomers(\"5ffb2d0deed9fa20eab8044f\");\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"custlist\">\r\n                <h1 >Customers List</h1>\r\n                { error && <div> { error } </div>}\r\n                { isLoading && <div>Loading...</div>}\r\n                {customersList && customersList.map(customer => {\r\n                    return (\r\n                        <div key={customer._id} className=\"customerdata\">\r\n                            <Link to={`/customerdetails/${customer._id}`}>\r\n                                <h2>Surname: </h2><p>{customer.surname},</p>\r\n                                <h2>Name: </h2><p>{customer.name}</p>\r\n                            </Link>\r\n                            <div>\r\n                                <Link to={`/customersessions/${customer._id}`}>\r\n                                    Customer Sessions\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomersList;\r\n","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\CustomerDetails.js",["63","64","65"],"import React, {useContext, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {TrainerContext} from \"../contexts/TrainerContext\";\r\n\r\nexport default function CustomerDetails() {\r\n\r\n    const { id } = useParams(); // It grabs the id parameter defined on the route.\r\n    const {customersList, setCustomersList} = useContext(TrainerContext);\r\n    let customerData, indexData, error;\r\n    console.log(\"CustomersList: \", customersList);\r\n    if (customersList !== null) {\r\n        customerData = customersList.find(customer => customer._id === id);\r\n        indexData = customersList.findIndex(customer => customer._id === id);\r\n        console.log(\"Customer Data: \", customerData);\r\n        const {name, surname} = customerData;\r\n    } else {\r\n        error = `The customer with id: ${id} didn't exist `;\r\n    };\r\n\r\n    // const [name, setName] = useState(customerData.name);\r\n    // const [surname, setSurname] = useState(customerData.surname);\r\n\r\n    // function handleChange(event, index) {\r\n    //     const { name, value } = event.target;\r\n    //     const newExpenses = [...expenses];\r\n    //     newExpenses[index] = {\r\n    //       ...expenses[index],\r\n    //       [name]: value\r\n    //     };\r\n    //     setExpenses(newExpenses);\r\n    // };\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target; \r\n        console.log(\"Name: \", name);\r\n        console.log(\"Value: \", value);\r\n        console.log(typeof value);\r\n        let newCustomerList = [...customersList];\r\n        if (name === 'weigth' || name === 'heigth') {\r\n            newCustomerList[indexData][name] = Number(value);\r\n        } else {\r\n            newCustomerList[indexData][name] = value; \r\n        }\r\n        setCustomersList(newCustomerList);\r\n    };\r\n\r\n    function handleSubmit (event) {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"custdata\">\r\n                <h2>Customer Details - { id }</h2>\r\n                { error && <div> { error } </div>}\r\n                { customersList && (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label>Name: </label>\r\n                        <input\r\n                            key=\"1\"\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"name\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].name}\r\n                        />\r\n                        <label>Surname: </label>\r\n                        <input\r\n                            key=\"2\"\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"surname\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].surname}\r\n                        />\r\n                        <label>Weigth: </label>\r\n                        <input\r\n                            key=\"3\"\r\n                            type=\"number\"\r\n                            name=\"weigth\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].weigth}\r\n                        />\r\n                        <label>Heigth: </label>\r\n                        <input\r\n                            key=\"4\"\r\n                            type=\"number\"\r\n                            name=\"heigth\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].heigth}\r\n                        />\r\n                        <label>Birthdate: </label>\r\n                        <input\r\n                            key=\"5\"\r\n                            type=\"date\"\r\n                            name=\"birthdate\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].birthdate}\r\n                        />\r\n                        <label>Perímeters: </label>\r\n                        <select>\r\n                            <option value=\"Chest\">Chest</option>\r\n                            <option value=\"Waist\">Waist</option>\r\n                            <option value=\"Hip\">Hip</option>\r\n                        </select>\r\n                        <label>Skin turgor: </label>\r\n                        <select>\r\n                            <option value=\"Chest\">Legs</option>\r\n                            <option value=\"Waist\">Arms</option>\r\n                            <option value=\"Hip\">Waist</option>\r\n                        </select>\r\n                        <label>Objective: </label>\r\n                        <input\r\n                            key=\"6\"\r\n                            name=\"objective\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].objective}\r\n                        />\r\n                        <label>Injuries and/or disseases: </label>\r\n                        <input\r\n                            key=\"7\"\r\n                            name=\"injuriesDiseases\"\r\n                            onChange={(event) => handleChange(event)}\r\n                            // onKeyDown={handleKeyDown}\r\n                            value={customersList[indexData].injuriesDiseases}\r\n                        />\r\n                        <button>Update Customer</button>\r\n                    </form>\r\n                )}\r\n                <p>It lacks perimeters date with possibilities to add measurements on different dates</p>\r\n                <p>It lacks skin turgor date with possibilities to add measurements on different dates</p>\r\n                <p>It lacks going to look for trainer name</p>\r\n            </div>          \r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\TrainerDetails.js",[],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\CustomerSessions.js",[],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\contexts\\TrainerContext.js",[],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\Login.js",["66","67","68"],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\lib\\components\\Navbar.js",[],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\lib\\service.js",[],"C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\pages\\signup.js",["69"],"import React, { useState } from \"react\";\r\nimport {app} from \"../utils/firebase/firebase.config\"\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n    const [error, seterror] = useState(\"\");\r\n    const handleSignUp = async e => {\r\n        e.preventDefault();\r\n        const { email, password } = e.target.elements;\r\n        console.log('email', email.value, 'pass', password.value)\r\n\r\n        await app\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email.value, password.value)\r\n            .then(result => {\r\n                console.log('registrado en firebase');\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                // si quieres enviar el error por el front de porque no funciona el log in \r\n                seterror(error.message);\r\n            });\r\n    };\r\n    return (\r\n        <form onSubmit={handleSignUp}>\r\n        \r\n                <h1>Registro</h1>\r\n                <input\r\n                    name=\"email\"\r\n                    placeholder=\"Registra un Usuario\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Registra una Clave\"\r\n                />\r\n                <button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ marginRight: 10 }}\r\n                >\r\n                    Registrate\r\n                </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default withRouter(Signup)","C:\\Users\\Netra\\Desktop\\uoc\\frontend_ TrainerAppBcn\\src\\utils\\firebase\\firebase.config.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":25,"nodeType":"76","messageId":"77","endLine":2,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":11,"column":8,"nodeType":"76","messageId":"77","endLine":11,"endColumn":23},{"ruleId":"74","severity":1,"message":"79","line":13,"column":10,"nodeType":"76","messageId":"77","endLine":13,"endColumn":29},{"ruleId":"74","severity":1,"message":"80","line":19,"column":9,"nodeType":"76","messageId":"77","endLine":19,"endColumn":19},{"ruleId":"74","severity":1,"message":"81","line":9,"column":19,"nodeType":"76","messageId":"77","endLine":9,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":31,"column":8,"nodeType":"84","endLine":31,"endColumn":10,"suggestions":"85"},{"ruleId":"74","severity":1,"message":"86","line":1,"column":28,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"87","line":15,"column":16,"nodeType":"76","messageId":"77","endLine":15,"endColumn":20},{"ruleId":"74","severity":1,"message":"88","line":15,"column":22,"nodeType":"76","messageId":"77","endLine":15,"endColumn":29},{"ruleId":"74","severity":1,"message":"89","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":37},{"ruleId":"74","severity":1,"message":"90","line":1,"column":39,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"91","line":9,"column":12,"nodeType":"76","messageId":"77","endLine":9,"endColumn":17},{"ruleId":"74","severity":1,"message":"91","line":6,"column":12,"nodeType":"76","messageId":"77","endLine":6,"endColumn":17},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'TrainerProvider' is defined but never used.","'computeHeadingLevel' is defined but never used.","'isLoggedin' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllCustomers'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'useState' is defined but never used.","'name' is assigned a value but never used.","'surname' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [fetchAllCustomers]",{"range":"97","text":"98"},[1582,1584],"[fetchAllCustomers]"]