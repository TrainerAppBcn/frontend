[{"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/index.js":"1","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/App.js":"2","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/reportWebVitals.js":"3","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/CustomersList.js":"4","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/lib/service.js":"5","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/CustomerDetails.js":"6","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/Login.js":"7","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/TrainerDetails.js":"8","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/lib/components/Navbar.js":"9","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/contexts/TrainerContext.js":"10","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/CustomerSessions.js":"11","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/NotFound.js":"12","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/SessionDetails.js":"13","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/store/reducers/rootReducer.js":"14","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/store/actions/customerActions.js":"15","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/store/actions/trainerActions.js":"16"},{"size":709,"mtime":1620741404774,"results":"17","hashOfConfig":"18"},{"size":1778,"mtime":1620659826127,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609432203393,"results":"20","hashOfConfig":"21"},{"size":4749,"mtime":1621001166400,"results":"22","hashOfConfig":"18"},{"size":3695,"mtime":1617636424408,"results":"23","hashOfConfig":"18"},{"size":14774,"mtime":1621001123724,"results":"24","hashOfConfig":"18"},{"size":221,"mtime":1615749502682,"results":"25","hashOfConfig":"18"},{"size":829,"mtime":1615739943900,"results":"26","hashOfConfig":"18"},{"size":5810,"mtime":1621001095632,"results":"27","hashOfConfig":"18"},{"size":6654,"mtime":1617635236724,"results":"28","hashOfConfig":"18"},{"size":5695,"mtime":1621001157586,"results":"29","hashOfConfig":"18"},{"size":296,"mtime":1612119547481,"results":"30","hashOfConfig":"18"},{"size":9721,"mtime":1621001193332,"results":"31","hashOfConfig":"18"},{"size":4134,"mtime":1621000972617,"results":"32","hashOfConfig":"18"},{"size":4914,"mtime":1621000163344,"results":"33","hashOfConfig":"18"},{"size":904,"mtime":1620750132376,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1xqe0io",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"16gpyma",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/index.js",[],["71","72"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/App.js",[],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/reportWebVitals.js",[],["73","74"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/CustomersList.js",["75","76","77"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/lib/service.js",[],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/CustomerDetails.js",["78","79","80","81","82"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/Login.js",[],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/TrainerDetails.js",["83"],"import React, {useContext, useEffect} from 'react';\nimport { TrainerContext } from \"../contexts/TrainerContext\";\n\nexport default function TrainerDetails() {\n    \n    const {setIsHide, setClassNav} = useContext(TrainerContext);\n\n    useEffect(() => {\n        setIsHide(true)\n        setClassNav(\"rounded bg-red-500 text-white p-2 mt-0.5 hover:bg-primary transition ease-out duration-500 hidden\");\n    }, [])\n\n    return (\n        <div>\n            <div className=\"flex flex-col\">\n                <h1 className=\"m-auto\">Trainer Details</h1>\n                <p className=\"m-auto\">Form with trainer data</p>\n                <p className=\"m-auto\">Button to delete the customer</p>\n                <p className=\"m-auto\">Button to update the customer data (created from customer</p>\n            </div>          \n        </div>\n    )\n};\n","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/lib/components/Navbar.js",[],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/contexts/TrainerContext.js",["84","85"],"import React, { useState, createContext } from 'react';\nimport services from \"../lib/service\";\nimport { useHistory } from 'react-router-dom';\n\nexport const TrainerContext = createContext();\n\nfunction TrainerContextProvider (props) {\n    const trainerId = \"5ffb2d0deed9fa20eab8044f\";\n    const trainerEmail = \"martinez.andreu@gmail.com\";\n    \n    const [customersList, setCustomersList] = useState(null);\n    const [customerSessions, setCustomerSessions] = useState(null);\n    const [trainerData, setTrainerData] = useState(null)\n    const [customerData, setCustomerData] = useState(null)\n    const [error, setError] = useState(null);\n    const [isPending, setIsPending] = useState(false);\n    const [isHide, setIsHide] = useState(true);\n    const [classNav, setClassNav] = useState(\"rounded bg-red-500 text-white p-2 mt-0.5 hover:bg-primary transition ease-out duration-500 hidden\");\n    const history = useHistory();\n    \n    const fetchAllCustomers = async (trainerId) => {\n        try {\n            const customers = await services.getCustomers(trainerId);\n            if (!customers) {\n                throw Error(`The customers from the trainer with id ${trainerId} weren't fetched.`);\n            };\n            setCustomersList(customers);      \n            setError(null);\n        } catch (error) {\n            setError(error.message);\n            console.log(\"Error while getting the customers: \", error);\n        };\n    };\n\n    const updateCustomer = async (indexData) => {\n        try {\n            setIsPending(true);\n            const customer = await services.updateCustomer(customersList[indexData]._id, customersList[indexData]);\n            setIsPending(false);\n            if (!customer) {\n                throw Error(`The customer with id: ${customersList[indexData]._id} wasn't updated.`);\n            };\n            setError(null);\n        } catch (error) {\n            setIsPending(false);\n            setError(error.message);\n            console.log(`Error while updating the customer with id: ${customersList[indexData]._id}`);\n        };\n    };\n\n    const deleteCustomer = async (indexData) => {\n        try {\n            setIsPending(true);\n            const customer = await services.deleteCustomer(customersList[indexData]._id);\n            setIsPending(false);\n            if (!customer) {\n                throw Error(`The customer with id: ${customersList[indexData]._id} wasn't deleted.`);\n            };\n            history.push('/')\n            setError(null);\n        } catch (error) {\n            setIsPending(false);\n            setError(error.message);\n            console.log(`Error while deleting the customer with id: ${customersList[indexData]._id}`);\n        };\n    };\n\n    const getTrainer = async (trainerEmail) => {\n        try {\n            setIsPending(true);\n            const trainer = await services.getTrainer(trainerEmail);\n            setIsPending(false);\n            if (!trainer) {\n                throw Error(`The trainer with email: ${trainerEmail} wasn't found.`);\n            };\n            setTrainerData(trainer);\n            setError(null);            \n        } catch (error) {\n            setIsPending(false);\n            setError(error.message);\n            console.log(`Error while getting the trainer with email: ${trainerEmail}`);\n        };\n    };\n\n    const updateSession = async (indexData) => {\n        try {\n            setIsPending(true);\n            const session = await services.updateSession(customerSessions[indexData]._id, customerSessions[indexData]);\n            setIsPending(false);\n            if (!session) {\n                throw Error(`The session with id: ${customerSessions[indexData]._id} wasn't updated.`);\n            };\n            setError(null);\n        } catch (error) {\n            setIsPending(false);\n            setError(error.message);\n            console.log(`Error while updating the session with id: ${customerSessions[indexData]._id}`);\n        };\n    };\n\n    const fetchAllSessions = async (customerId) => {\n        try {\n            console.log(\"Customer id for getting sessions: \", customerId);\n            const sessions = await services.getSessions(customerId);\n            if (!sessions) {\n                throw Error(`The sessions from the customer with id ${customerId} weren't fetched.`);\n            };\n            setCustomerSessions(sessions);      \n            setError(null);\n        } catch (error) {\n            setError(error.message);\n            console.log(\"Error while getting the sessions: \", error);\n        };\n    };\n\n    const getCustomer = async (customerId) => {\n        try {\n            setIsPending(true);\n            const customer = await services.getCustomer(customerId);\n            setIsPending(false);\n            if (!customer) {\n                throw Error(`The customer with id: ${customerId} wasn't found.`);\n            };\n            setCustomerData(customer);\n            setError(null);            \n        } catch (error) {\n            setIsPending(false);\n            setError(error.message);\n            console.log(`Error while getting the customer with id: ${customerId}`);\n        };\n    };\n\n    function formatTime(oneTime) {\n        const hourNum = oneTime / 100\n        const hourStr = Math.trunc(hourNum).toString().padStart(2, '0')\n        const minStr  = (oneTime - Math.trunc(hourNum) * 100).toString().padStart(2, '0')\n        \n        return hourStr + ':' + minStr\n    }\n\n    function handleClickBack(routeBack) {\n        history.push(routeBack)\n    }\n\n    return (\n        \n        <TrainerContext.Provider value={{customersList, setCustomersList, \n                                        customerSessions, setCustomerSessions,\n                                        error, setError, \n                                        fetchAllCustomers,\n                                        fetchAllSessions,\n                                        updateCustomer,\n                                        updateSession,\n                                        formatTime,\n                                        handleClickBack,\n                                        isPending, setIsPending,\n                                        isHide, setIsHide,\n                                        classNav, setClassNav,\n                                        deleteCustomer,\n                                        trainerData, setTrainerData,\n                                        customerData, setCustomerData,\n                                        getTrainer, getCustomer}} >\n            {props.children} \n        </TrainerContext.Provider>\n    );\n};\n\nexport default TrainerContextProvider;\n","/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/CustomerSessions.js",["86","87","88"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/NotFound.js",[],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/pages/SessionDetails.js",["89"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/store/reducers/rootReducer.js",["90","91","92","93"],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/store/actions/customerActions.js",[],"/Users/andreumartineznuevo/OneDrive/Andreu/TrainerAppBcn/frontend/src/store/actions/trainerActions.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":19,"column":8,"nodeType":"106","endLine":19,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":24,"column":8,"nodeType":"106","endLine":24,"endColumn":10,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":27},{"ruleId":"100","severity":1,"message":"111","line":4,"column":40,"nodeType":"102","messageId":"103","endLine":4,"endColumn":56},{"ruleId":"100","severity":1,"message":"112","line":4,"column":120,"nodeType":"102","messageId":"103","endLine":4,"endColumn":140},{"ruleId":"104","severity":1,"message":"113","line":17,"column":8,"nodeType":"106","endLine":17,"endColumn":10,"suggestions":"114"},{"ruleId":"100","severity":1,"message":"115","line":20,"column":9,"nodeType":"102","messageId":"103","endLine":20,"endColumn":18},{"ruleId":"104","severity":1,"message":"116","line":11,"column":8,"nodeType":"106","endLine":11,"endColumn":10,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"118","line":8,"column":11,"nodeType":"102","messageId":"103","endLine":8,"endColumn":20},{"ruleId":"100","severity":1,"message":"119","line":9,"column":11,"nodeType":"102","messageId":"103","endLine":9,"endColumn":23},{"ruleId":"104","severity":1,"message":"120","line":23,"column":8,"nodeType":"106","endLine":23,"endColumn":10,"suggestions":"121"},{"ruleId":"104","severity":1,"message":"122","line":28,"column":8,"nodeType":"106","endLine":28,"endColumn":10,"suggestions":"123"},{"ruleId":"104","severity":1,"message":"116","line":34,"column":8,"nodeType":"106","endLine":34,"endColumn":10,"suggestions":"124"},{"ruleId":"104","severity":1,"message":"116","line":21,"column":8,"nodeType":"106","endLine":21,"endColumn":10,"suggestions":"125"},{"ruleId":"100","severity":1,"message":"126","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":42,"column":13,"nodeType":"129","messageId":"130","endLine":42,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":98,"column":13,"nodeType":"129","messageId":"130","endLine":98,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":104,"column":13,"nodeType":"129","messageId":"130","endLine":104,"endColumn":19},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],"'fetchAllCustomers' is defined but never used.","'setCustomersList' is defined but never used.","'setIsCustomerDeleted' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["135"],"'indexData' is defined but never used.","React Hook useEffect has missing dependencies: 'setClassNav' and 'setIsHide'. Either include them or remove the dependency array.",["136"],"'trainerId' is assigned a value but never used.","'trainerEmail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAllSessions' and 'id'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'getCustomer' and 'id'. Either include them or remove the dependency array.",["138"],["139"],["140"],"'services' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"146","fix":"152"},{"desc":"146","fix":"153"},"Update the dependencies array to be: [props]",{"range":"154","text":"155"},{"range":"156","text":"155"},"Update the dependencies array to be: [id, props]",{"range":"157","text":"158"},"Update the dependencies array to be: [setClassNav, setIsHide]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetchAllSessions, id]",{"range":"161","text":"162"},"Update the dependencies array to be: [getCustomer, id]",{"range":"163","text":"164"},{"range":"165","text":"160"},{"range":"166","text":"160"},[1063,1065],"[props]",[1209,1211],[763,765],"[id, props]",[403,405],"[setClassNav, setIsHide]",[850,852],"[fetchAllSessions, id]",[967,969],"[getCustomer, id]",[1261,1263],[770,772]]